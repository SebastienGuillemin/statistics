library(PCAmixdata)
library("FactoMineR")
library(tidyverse)
library(dplyr)
library(missMDA)
library(mice)
library(VIM)
library(descriptr)

# Multivariate analysis with mix data : https://chavent.github.io/PCAmixdata/

# Importer fichier csv.
cana<-cannabis

# Convertir colonne id en nom de lignes
cana<-data.frame(cana,row.names=1)
ds_screener(cana)

cana.df1<-cana[,1:10]
cana.df2<-cana[,1:12]

##
# AFDM avec FactoMineR

# subset the rows of dataframe with multiple conditions
df = cana[,1:10]
ds_screener(df)
df1<-df[,-9]

# res.famd <- FAMD(df1, graph = FALSE)


# https://delladata.fr/imputation-donnees-manquantes-missmda/

cana.df1$etiquette<-as.factor(cana.df1$etiquette)
cana.df1$presentation<-as.factor(cana.df1$presentation)
ds_screener(cana.df1)
ncomp <- estim_ncpFAMD(cana.df1)
res.impute <- imputeFAMD(cana.df1, ncp=ncomp$ncp)
res.comp <- MIFAMD(cana.df1, ncp = ncomp$ncp, nboot = 100)
head(res.comp$res.MI[[1]])
plot(res.comp)
# long avec nboot = 1000

## The output can be used as an input of the FAMD function of the FactoMineR package 
##to perform the FAMD on the incomplete data ozone 
res.famd <- FAMD(cana.df1,
                 tab.disj=res.impute$tab.disj,graph=FALSE)

# res.famd <- FAMD(cana.df1[,c(1:8)],sup.var=c(9),
#                 tab.disj=res.impute$tab.disj,graph=FALSE)

#res.famd <- FAMD(cana.df1[,c(1:9)],sup.var=c(1))
print(res.famd)

library("factoextra")
eig.val <- get_eigenvalue(res.famd)
head(eig.val)
fviz_screeplot(res.famd)
var <- get_famd_var(res.famd)

# Graphique des variables
fviz_famd_var(res.famd, repel = TRUE)
quanti.var <- get_famd_var(res.famd, "quanti.var")
fviz_famd_var(res.famd, "quanti.var", col.var = "contrib", 
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
              repel = TRUE)

# Couleur par valeurs cos2: qualité sur le plan des facteurs
fviz_famd_var(res.famd, "quanti.var", col.var = "cos2",
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
              repel = TRUE)

fviz_famd_var(res.famd, "quanti.var", col.var = "cos2", axes=c(2,3),
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
              repel = TRUE)

quali.var <- get_famd_var(res.famd, "quali.var")
fviz_famd_var(res.famd, "quali.var", col.var = "contrib", 
              gradient.cols = "jco")

fviz_famd_var(res.famd, "quali.var", col.var = "cos2", 
              gradient.cols = "jco",col.var.sup = "black")

fviz_famd_var(res.famd, "quali.var", col.var = "cos2", axes = c(1, 3),
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))

fviz_famd_var(res.famd, "quali.var", col.var = "cos2", 
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),sup.var="black")


ind <- get_famd_ind(res.famd)

fviz_famd_ind(res.famd, col.ind = "cos2", 
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
              labels = FALSE)

fviz_mfa_ind(res.famd, 
             habillage = "presentation", # color by groups 
             palette = "jco",
             addEllipses = TRUE, ellipse.type = "confidence", 
             labels = FALSE
)

fviz_mfa_ind(res.famd, 
             habillage = "presentation", # color by groups 
             palette = "jco",
             addEllipses = TRUE, ellipse.type = "confidence", 
             repel = TRUE # Avoid text overlapping
)

# Avec package mice
# https://datascienceplus.com/imputing-missing-data-with-r-mice-package/

par(mfrow=c(1,1))
md.pattern(cana.df1)

aggr_plot <- aggr(cana.df1, col=c('navyblue','red'), numbers=TRUE, 
                  sortVars=TRUE, labels=names(data), 
                  cex.axis=.5, gap=1, 
                  ylab=c("Histogram of missing data","Pattern"))
marginplot(cana.df1[c(1,2)])

tempData <- mice(cana.df1,m=14,maxit=50,meth='pmm',seed=500)
# methods(mice) pour obtenir la liste des méthodes d'imputation disponibles
summary(tempData)
completedData <- complete(tempData,1)
densityplot(tempData)

res.famd <- FAMD(completedData,graph=FALSE)
eig.val <- get_eigenvalue(res.famd)
head(eig.val)
fviz_screeplot(res.famd)
var <- get_famd_var(res.famd)

# Graphique des variables
fviz_famd_var(res.famd, repel = TRUE)
quanti.var <- get_famd_var(res.famd, "quanti.var")
fviz_famd_var(res.famd, "quanti.var", col.var = "contrib", 
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
              repel = TRUE)

# Couleur par valeurs cos2: qualité sur le plan des facteurs
fviz_famd_var(res.famd, "quanti.var", col.var = "cos2",
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
              repel = TRUE)

quali.var <- get_famd_var(res.famd, "quali.var")
fviz_famd_var(res.famd, "quali.var", col.var = "contrib", 
              gradient.cols = "jco")

fviz_famd_var(res.famd, "quali.var", col.var = "cos2", 
              gradient.cols = "jco",col.var.sup = "black")

fviz_famd_var(res.famd, "quali.var", col.var = "cos2", axes = c(1, 3),
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))

fviz_famd_var(res.famd, "quali.var", col.var = "cos2", 
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),sup.var="black")


ind <- get_famd_ind(res.famd)

fviz_famd_ind(res.famd, col.ind = "cos2", 
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
              labels = FALSE)

fviz_mfa_ind(res.famd, 
             habillage = "presentation", # color by groups 
             palette = "jco",
             addEllipses = TRUE, ellipse.type = "confidence", 
             labels = FALSE
)
